{"uid":"d80f5be812641277","name":"测试创建帖子并验证数据库记录","fullName":"testcases.test_posts.TestPosts#test_create_post_with_db_validation","historyId":"1939e0e02bca3b890dc8b44c426a5e68","time":{"start":1731152031245,"stop":1731152031815,"duration":570},"description":"创建帖子并验证数据库记录","descriptionHtml":"<p>创建帖子并验证数据库记录</p>\n","status":"broken","statusMessage":"IndexError: list index out of range","statusTrace":"self = <testcases.test_posts.TestPosts object at 0x106330e20>, mysql_db = <database.mysql_handler.MySQLHandler object at 0x1063f4980>\n\n    @allure.story(\"创建帖子并验证数据库记录\")\n    @allure.title(\"测试创建帖子并验证数据库记录\")\n    def test_create_post_with_db_validation(self, mysql_db):\n        \"\"\"创建帖子并验证数据库记录\"\"\"\n        try:\n            # 1. 准备测试数据\n            title = \"测试标题\"\n            body = \"测试内容\"\n            user_id = 1\n    \n            logger.info(f\"当前测试环境: {env_manager.get_env()}\")\n    \n            # 检查是否需要跳过数据库验证\n            if not mysql_db:\n                logger.info(\"数据库未配置，跳过数据库验证\")\n                pytest.skip(\"数据库未配置，跳过数据库验证\")\n    \n            # 2. 通过 API 创建帖子\n            response = self.posts_api.create_post(\n                title=title,\n                body=body,\n                user_id=user_id\n            )\n            assert response.status_code == 201, \"创建帖子失败\"\n            post_data = response.json()\n            logger.info(f\"API响应数据: {post_data}\")\n    \n            # 3. 数据库验证（仅在非dev环境且有数据库连接时执行）\n            if env_manager.get_env() != 'dev' and mysql_db:\n                logger.info(\"执行数据库验证\")\n    \n                try:\n                    # 首先检查数据库连接\n                    mysql_db.execute_query(\"SELECT 1\")\n                    logger.info(\"数据库连接正常\")\n    \n                    # 获取当前数据库名\n>                   db_name = mysql_db.execute_query(\"SELECT DATABASE()\")[0][0]\nE                   IndexError: list index out of range\n\ntestcases/test_posts.py:177: IndexError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1731152025665,"stop":1731152025698,"duration":33},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"_xunit_setup_class_fixture_TestPosts","time":{"start":1731152025698,"stop":1731152025700,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"mysql_db","time":{"start":1731152031108,"stop":1731152031119,"duration":11},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"env_setup","time":{"start":1731152031119,"stop":1731152031119,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup_test","time":{"start":1731152031119,"stop":1731152031244,"duration":125},"status":"passed","steps":[{"name":"用户登录","time":{"start":1731152031120,"stop":1731152031243,"duration":123},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"testStage":{"description":"创建帖子并验证数据库记录","status":"broken","statusMessage":"IndexError: list index out of range","statusTrace":"self = <testcases.test_posts.TestPosts object at 0x106330e20>, mysql_db = <database.mysql_handler.MySQLHandler object at 0x1063f4980>\n\n    @allure.story(\"创建帖子并验证数据库记录\")\n    @allure.title(\"测试创建帖子并验证数据库记录\")\n    def test_create_post_with_db_validation(self, mysql_db):\n        \"\"\"创建帖子并验证数据库记录\"\"\"\n        try:\n            # 1. 准备测试数据\n            title = \"测试标题\"\n            body = \"测试内容\"\n            user_id = 1\n    \n            logger.info(f\"当前测试环境: {env_manager.get_env()}\")\n    \n            # 检查是否需要跳过数据库验证\n            if not mysql_db:\n                logger.info(\"数据库未配置，跳过数据库验证\")\n                pytest.skip(\"数据库未配置，跳过数据库验证\")\n    \n            # 2. 通过 API 创建帖子\n            response = self.posts_api.create_post(\n                title=title,\n                body=body,\n                user_id=user_id\n            )\n            assert response.status_code == 201, \"创建帖子失败\"\n            post_data = response.json()\n            logger.info(f\"API响应数据: {post_data}\")\n    \n            # 3. 数据库验证（仅在非dev环境且有数据库连接时执行）\n            if env_manager.get_env() != 'dev' and mysql_db:\n                logger.info(\"执行数据库验证\")\n    \n                try:\n                    # 首先检查数据库连接\n                    mysql_db.execute_query(\"SELECT 1\")\n                    logger.info(\"数据库连接正常\")\n    \n                    # 获取当前数据库名\n>                   db_name = mysql_db.execute_query(\"SELECT DATABASE()\")[0][0]\nE                   IndexError: list index out of range\n\ntestcases/test_posts.py:177: IndexError","steps":[],"attachments":[{"uid":"e1f8508c3825aacd","name":"log","source":"e1f8508c3825aacd.txt","type":"text/plain","size":3634}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"setup_test::0","time":{"start":1731152031851,"stop":1731152031852,"duration":1},"status":"passed","steps":[{"name":"清理登录状态","time":{"start":1731152031852,"stop":1731152031852,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"env_setup::0","time":{"start":1731152031853,"stop":1731152031853,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"_xunit_setup_class_fixture_TestPosts::0","time":{"start":1731152031854,"stop":1731152031854,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"mysql_db::0","time":{"start":1731152031855,"stop":1731152031855,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"Posts API Testing"},{"name":"story","value":"创建帖子并验证数据库记录"},{"name":"parentSuite","value":"testcases"},{"name":"suite","value":"test_posts"},{"name":"subSuite","value":"TestPosts"},{"name":"host","value":"KingdeMacBook-Pro.local"},{"name":"thread","value":"18935-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testcases.test_posts"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"d80f5be812641277.json","parameterValues":[]}